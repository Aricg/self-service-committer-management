name: Create PR message

on:
  pull_request:
    branches: [master]
  pull_request_review:
    types: [submitted]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '2'

      - name: get MODIFIED_FILES
        run: |
          echo "Start new"
          PR_NUMBER=$(echo $GITHUB_REF | awk 'BEGIN { FS = "/" } ; { print $3 }')
          if [[ "$PR_NUMBER" == "master" ]]; then
          echo "changing PR_NUMBER to ${{ github.event.issue.number }}"
          PR_NUMBER=${{ github.event.issue.number }}
          fi
          echo "pr number = $PR_NUMBER"
          git fetch origin +refs/pull/$PR_NUMBER/merge
          git checkout FETCH_HEAD
          git log -1

      - name: set api key
        env:
          TEST_API_KEY: ${{ secrets.TEST_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo $GITHUB_TOKEN
          echo $TEST_API_KEY
          if [[ -z $TEST_API_KEY ]]; then
            TEST_API_KEY=$GITHUB_TOKEN
          fi
          mkdir -p ~/.config/lftools/
          echo "[github]" >>  ~/.config/lftools/lftools.ini
          echo "token = $TEST_API_KEY" >>  ~/.config/lftools/lftools.ini
          echo "[github.lfit-sandbox]" >>  ~/.config/lftools/lftools.ini
          echo "token = $TEST_API_KEY" >>  ~/.config/lftools/lftools.

      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: '3.6'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          git clone "https://gerrit.linuxfoundation.org/infra/releng/lftools"
          cd lftools
          pip install .
          pip install yq

      - name: main
        run: |
          MODIFIED_FILES=$(git diff --name-only HEAD HEAD~1)
          PR_NUMBER=$(echo $GITHUB_REF | awk 'BEGIN { FS = "/" } ; { print $3 }')
          org="$(echo $GITHUB_REPOSITORY | awk -F "/" '{ print $1 }')"
          ghrepo="$(echo $GITHUB_REPOSITORY | awk -F "/" '{ print $2 }')"
          repo=$(echo $MODIFIED_FILES | awk -F "/" '{ print $1}')
          team="$repo-committers"
          committers=$(cat $MODIFIED_FILES | yq -r '.committers[].github_id')

          mkdir -p artifacts
          cat > artifacts/message.md <<EOF
          # How to update your committers
          Please ask the current committers listed in the INFO file
          to approve this change, once enough approvals are submitted
          the pull request will automatically submit..
          github repositroy is $GITHUB_REPOSITORY
          PR_NUMBER=$PR_NUMBER
          MODIFIED_FILES=$MODIFIED_FILES
          team=$team
          repo=$repo
          committers=$committers

          <details>
          <summary>PR to merge $GITHUB_HEAD_REF $GITHUB_SHA -> $GITHUB_BASE_REF</summary>

          \`\`\`
          $(env | sort)
          \`\`\`

          </details>
          EOF

          foo=$(lftools github votes $org $ghrepo $PR_NUMBER)
          echo $foo >> artifacts/message.md


      - name: Save PR message as artifact
        uses: actions/upload-artifact@v1
        with:
          name: pr_message
          path: artifacts
