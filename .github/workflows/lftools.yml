# This is a basic workflow to help you get started with Actions
---
name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
      with:
        fetch-depth: '2'

    # Runs a single command using the runners shell
    - name: set api key
      env:
        TEST_API_KEY: ${{ secrets.TEST_API_KEY }}
      run: |
        mkdir -p ~/.config/lftools/
        echo "[github]" >>  ~/.config/lftools/lftools.ini
        echo "token = $TEST_API_KEY" >>  ~/.config/lftools/lftools.ini


    # Runs a set of commands using the runners shell
    - name: get changed files
      id: getfile
      run: |
        echo "::set-output name=files::$(git diff-tree --no-commit-id --name-only -r ${{ github.sha }} | xargs)"

    - name: echo output
      run: |
        echo ${{ steps.getfile.outputs.files }}

    - name: show git diff
      run: |
        echo "${{ github.sha}}"
        echo "${{ github.event.before}}"
        git diff --name-only ${{ github.event.before }} ${{ github.sha }}

    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install lftools


    - name: Run Python
      env:
        MODIFIED_FILES: ${{ steps.getfile.outputs.files }}
      run: |
        org="$(echo $GITHUB_REPOSITORY | awk -F "/" '{ print $1 }')"
        echo "modified files are $MODIFIED_FILES"
        echo $org
        #lfit-sandbox/self-service-committer-management
        if [[ "$MODIFIED_FILES" =~ "INFO.yaml" ]]; then
            lftools github list lfit-sandbox --teams
            lftools github list lfit-sandbox --team test-committers
            lftools lfidapi match-ldap-to-info ${{ steps.getfile.outputs.files }}  test-committers --githuborg "$org"
        else
            echo "Not a change to an INFO file"
        fi
