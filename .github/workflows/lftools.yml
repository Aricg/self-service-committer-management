# This is a basic workflow to help you get started with Actions
---
name: Self Service Verification
on:
  issue_comment:
    types: [created]
  pull_request_review:
    types: [submitted]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: '2'

    - name: set api key
      env:
        TEST_API_KEY: ${{ secrets.TEST_API_KEY }}
      run: |
        mkdir -p ~/.config/lftools/
        echo "[github]" >>  ~/.config/lftools/lftools.ini
        echo "token = $TEST_API_KEY" >>  ~/.config/lftools/lftools.ini

    - name: Print GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: |
        echo "The event name is ${{ github.event_name }}"
        echo "$GITHUB_CONTEXT"

    - name: get MODIFIED_FILES
      run: |
        echo "Start new"
        PR_NUMBER=$(echo $GITHUB_REF | awk 'BEGIN { FS = "/" } ; { print $3 }')
        if [[ "$PR_NUMBER" == "master" ]]; then
        echo "changing PR_NUMBER to ${{ github.event.issue.number }}"
        PR_NUMBER=${{ github.event.issue.number }}
        fi
        echo "pr number = $PR_NUMBER"
        git fetch origin +refs/pull/$PR_NUMBER/merge
        git checkout FETCH_HEAD
        git log -1


    - name: show git diff
      run: |
        echo "New test"
        echo "${{ github.sha}}"
        echo "${{ github.event.before}}"
        git diff --name-only HEAD HEAD~1

    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: '3.6'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install lftools


    - name: Match team to INFO.yaml
      run: |
        MODIFIED_FILES=$(git diff --name-only HEAD HEAD~1)
        PR_NUMBER=${{ github.event.issue.number }}
        echo "github repositroy is $GITHUB_REPOSITORY"
        org="$(echo $GITHUB_REPOSITORY | awk -F "/" '{ print $1 }')"
        echo "modified files are $MODIFIED_FILES"
        if [[ "$MODIFIED_FILES" =~ "INFO.yaml" ]]; then
            repo=$(echo $MODIFIED_FILES | awk -F "/" '{ print $1}')
            team="$repo-committers"
            lftools github list "$org" --team $team
            lftools github votes "$org" "$repo" "$PR_NUMBER"
            echo "is the vote good? $?"
            lftools lfidapi match-ldap-to-info $MODIFIED_FILES "$team" --githuborg "$org"
            lftools github list "$org" --team $team
            echo "lftools github submit-pr $org $repo $PR_NUMBER"
        else
            echo "Not a change to an INFO file"
        fi
